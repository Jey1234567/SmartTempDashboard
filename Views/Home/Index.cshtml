@{
    ViewData["Title"] = "Home Page";
}



<div class="dashboard-container">
    <div class="main-chart">
        <div class="temp-header">
            <h2>🌡️ Live Graph</h2>
            <h2 class="temp-value">Current Temperature: <span id="liveTemp">-- °C</span></h2>
        </div>
        <canvas id="TemperatureChart" ></canvas>
    </div>
    <div class="side-chart">
        <h3>🌤️ Average Temperature Over the Last 3 Days</h3>
        <canvas id="avg3Chart"></canvas>

    </div>
</div>





<!--Use Chartjs and SignalR for dynamic graph-->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    window.onload= function () {
        fetch3DayAvg();
     //line chart for temperature chart
    var suhuData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));

     var latest = suhuData.slice(-30); // get last 30 entries
     var labels = latest.map(x => new Date(x.Timestamp).toLocaleTimeString());
     var values = latest.map(x => x.Temp);

    var ctx = document.getElementById('TemperatureChart').getContext('2d');
    const gradient = ctx.createLinearGradient(0, 0, 0, 400);
    gradient.addColorStop(0, 'rgba(0, 200, 255, 1)');
    gradient.addColorStop(1, 'rgba(0, 100, 255, 1)');
    window.myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: 'Temperature (°C)',
                data: values,
                borderColor: 'rgb(75, 192, 192)',
                backgroundColor: gradient,
                borderWidth: 4,
                pointRadius: 4,
                pointBackgroundColor: 'black',
                fill: false,
                tension: 0.4
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: false,
                    title: {
                     display: true,
                     text: 'Temperature (°C)'
                    }
                }
            }
        }
    });

    // Connect to SignalR Hub
        const connection = new signalR.HubConnectionBuilder()
        .withUrl("/charthub")
        .build();

    connection.on("ReceiveTemperature", function (temp) {
        

        //Update temperature text
        document.getElementById("liveTemp").innerText = `${temp.temp} °C`;

        //Convert timestamp
        var timestamp=new Date(temp.timestamp).toLocaleTimeString();
        // Update your chart dynamically here
        addDataToChart(timestamp, temp.temp);
    });

    connection.start();

    function addDataToChart(timestamp, temperature) {
     
        
        myChart.data.labels.push(timestamp);
        myChart.data.datasets[0].data.push(temperature);
        
        if (myChart.data.labels.length > 30) {
            myChart.data.labels.shift();
            myChart.data.datasets[0].data.shift();
        }

        myChart.update();
    }

    }

    let avgChart;
        function fetch3DayAvg(){
        $.ajax({
            url: 'api/Temperature/Average3Days',
            method: 'get',
            success: function (data){
                const labels = data.map(x => x.day);
                const values = data.map(x => x.avgtemp);

                if (avgChart) {
                    avgChart.data.labels = labels;
                    avgChart.data.datasets[0].data = values;
                    avgChart.update();
                } else {
                    var barCtx = document.getElementById('avg3Chart').getContext('2d');
                    avgChart = new Chart(barCtx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Average °C',
                                data: values,
                                backgroundColor: ['#36a2eb', '#4bc0c0', '#9966ff']
                            }]
                        },
                        options: {
                            indexAxis: 'y',
                            responsive: true
                        }
                    });
                }
            },
            error: function (xhr, status, err) {
                console.error("❌ Failed to fetch 3-day average:", err);
            }
        });
    }

      
</script>





